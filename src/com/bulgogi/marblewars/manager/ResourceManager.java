package com.bulgogi.marblewars.manager;import org.andengine.engine.Engine;import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlas;import org.andengine.opengl.texture.atlas.bitmap.BitmapTextureAtlasTextureRegionFactory;import org.andengine.opengl.texture.atlas.bitmap.BuildableBitmapTextureAtlas;import org.andengine.opengl.texture.atlas.bitmap.source.IBitmapTextureAtlasSource;import org.andengine.opengl.texture.atlas.buildable.builder.BlackPawnTextureAtlasBuilder;import org.andengine.opengl.texture.atlas.buildable.builder.ITextureAtlasBuilder.TextureAtlasBuilderException;import org.andengine.opengl.texture.region.ITextureRegion;import org.andengine.util.debug.Debug;import android.content.Context;import com.bulgogi.marblewars.config.Constants;public class ResourceManager {	private ITextureRegion gameBackgroundTextureRegion;		private volatile static ResourceManager instance;		private ResourceManager() {	}	public static ResourceManager getInstance() {		if (instance == null) {			synchronized (ResourceManager.class) {				if (instance == null) {					instance = new ResourceManager();				}			}		}		return instance;	}		public synchronized void loadGameTextures(Engine engine, Context context) {		BitmapTextureAtlasTextureRegionFactory.setAssetBasePath("gfx/");				BuildableBitmapTextureAtlas bitmapTextureAtlas = new BuildableBitmapTextureAtlas(engine.getTextureManager(), 1280, Constants.CAMERA_HEIGHT);				gameBackgroundTextureRegion = BitmapTextureAtlasTextureRegionFactory.createFromAsset(bitmapTextureAtlas, context, "background.png");				try {			bitmapTextureAtlas.build(new BlackPawnTextureAtlasBuilder<IBitmapTextureAtlasSource, BitmapTextureAtlas>(0, 0, 0));			bitmapTextureAtlas.load();		} catch (TextureAtlasBuilderException e) {			Debug.e(e);		}	}		public synchronized void unloadGameTextures() {		BuildableBitmapTextureAtlas bitmapTextureAtlas = (BuildableBitmapTextureAtlas) gameBackgroundTextureRegion.getTexture();		bitmapTextureAtlas.unload();				System.gc();	}	public ITextureRegion getGameBackgroundTextureRegion() {		return gameBackgroundTextureRegion;	}}